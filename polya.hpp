#ifndef _flipper_polya_h
#define _flipper_polya_h

#include <string>
#include <vector>
#include <unordered_map>

struct polya_res_t {
    int signal_pos;
    int tail_pos;
    int tail_length;
};

const std::unordered_map<char, int> alphabet = {
    {'A', 0},
    {'C', 1},
    {'T', 2},
    {'G', 3}
};

const std::vector<std::string> states {"seq", "pAs1", "pAs2", "pAs3", "pAs4", "pAs5", "pAs6", "seq2", "polyA", "seq3", "ins"};

const std::vector<std::vector<double>> emissions {
    {0.25, 0.25, 0.25, 0.25},
    {0.95, 0.05 / 3, 0.05 / 3, 0.05 / 3},
    {0.95, 0.05 / 3, 0.05 / 3, 0.05 / 3},
    {0.05 / 3, 0.05 / 3, 0.95, 0.05 / 3},
    {0.95, 0.05 / 3, 0.05 / 3, 0.05 / 3},
    {0.95, 0.05 / 3, 0.05 / 3, 0.05 / 3},
    {0.95, 0.05 / 3, 0.05 / 3, 0.05 / 3},
    {0.25, 0.25, 0.25, 0.25},
    {0.95, 0.05 / 3, 0.05 / 3, 0.05 / 3},
    {0.25, 0.25, 0.25, 0.25},
    {0.25, 0.25, 0.25, 0.25}    
};

const std::vector<std::vector<double>> transitions {
    {0.99, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.93, 0.07, 0.00, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.95, 0.05, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.70, 0.00},
    {0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}
};

polya_res_t get_polya(std::string seq);

#endif